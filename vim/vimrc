set clipboard^=unnamed,unnamedplus
set nocompatible              " be iMproved, required
filetype off                  " required

" Install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

" Run PlugInstall if there are missing plugins
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \| PlugInstall --sync | source $MYVIMRC
\| endif


call plug#begin()
" The default plugin directory will be as follows:
"   - Vim (Linux/macOS): '~/.vim/plugged'
"   - Vim (Windows): '~/vimfiles/plugged'
"   - Neovim (Linux/macOS/Windows): stdpath('data') . '/plugged'
" You can specify a custom plugin directory by passing it as the argument
"   - e.g. `call plug#begin('~/.vim/plugged')`
"   - Avoid using standard Vim directory names like 'plugin'

" Make sure you use single quotes

Plug 'junegunn/vim-plug'

" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plug 'rstacruz/sparkup', {'rtp': 'vim/'}
" Plug 'L9'
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
Plug 'ascenator/L9', {'name': 'newL9'}

"[1]themes
""" Theme / Pretty stuff
"""
Plug 'altercation/vim-colors-solarized'
Plug 'endel/vim-github-colorscheme'
" Awesome looking meta at bottom
" " Fugitive will help with git related stuff, and show branch on statusline
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'dracula/vim'
"[2] IDE

Plug 'preservim/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'jistr/vim-nerdtree-tabs'
"C++
Plug 'octol/vim-cpp-enhanced-highlight'
Plug 'derekwyatt/vim-fswitch'
" Plug 'neoclide/coc.nvim'
"[3]
"FocusGained and FocusLost autocommand events are not working in terminal vim.
"This plugin restores them when using vim inside Tmux.
Plug 'tmux-plugins/vim-tmux-focus-events'
Plug 'christoomey/vim-tmux-navigator'
Plug 'christoomey/vim-tmux-runner'
Plug 'tmux-plugins/vim-tmux'
"[4]git plugin
Plug 'tpope/vim-fugitive'

"[markdown]
"helps aligning MD tables  
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'

"[fuzzy file search]
"powerfull plugin to jump to files, fast but depending on ruby
Plug 'wincent/command-t'
"another plugin to jump to files slower but no dependencies 
Plug 'kien/ctrlp.vim'
"[session management]
Plug 'tpope/vim-obsession'
Plug 'dhruvasagar/vim-prosession'
Plug 'gikmx/ctrlp-obsession'
" Initialize plugin system
call plug#end()


set pastetoggle=<F2>

" Start NERDTree
autocmd VimEnter * NERDTree
" Go to previous (last accessed) window.
autocmd VimEnter * wincmd p
"close vim once there is only nerdtree left
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endi

" open NERDTree TAB at startup
let g:nerdtree_tabs_open_on_console_startup=1

map <C-n> :NERDTreeToggle<CR>

"cpp syntax
let g:cpp_member_variable_highlight = 1

"add mouse support
set mouse=a

if has("mouse_sgr")
    set ttymouse=sgr
else
    set ttymouse=xterm2
end
" let &t_ti.="\e[?7727h"
" let &t_te.="\e[?7727l"
" noremap <Esc>O[ <Esc>
" noremap! <Esc>O[ <Esc>

set t_Co =256 
syntax enable
"let g:solarized_termcolors=256
set background=dark
"colorscheme dracula

let $SOLARIZED_DIR=expand("~/.vim/plugged/vim-colors-solarized")
if isdirectory($SOLARIZED_DIR)
    colorscheme solarized
    call togglebg#map("<F5>")
endif

"vim private config
set relativenumber
set number

"disable arrow keys
noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>

noremap <Leader>y "*y
noremap <Leader>p "*p
noremap <Leader>Y "+y
noremap <Leader>P "+p

