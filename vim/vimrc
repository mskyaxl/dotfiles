set clipboard^=unnamed,unnamedplus
set relativenumber

" Install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

" Run PlugInstall if there are missing plugins
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \| PlugInstall --sync | source $MYVIMRC
\| endif


call plug#begin('~/.vim/plugged')
" The default plugin directory will be as follows:
"   - Vim (Linux/macOS): '~/.vim/plugged'
"   - Vim (Windows): '~/vimfiles/plugged'
"   - Neovim (Linux/macOS/Windows): stdpath('data') . '/plugged'
" You can specify a custom plugin directory by passing it as the argument
"   - e.g. `call plug#begin('~/.vim/plugged')`
"   - Avoid using standard Vim directory names like 'plugin'

" Make sure you use single quotes

Plug 'junegunn/vim-plug'

" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plug 'rstacruz/sparkup', {'rtp': 'vim/'}
" Plug 'L9'
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
Plug 'ascenator/L9', {'name': 'newL9'}

"[1]themes
""" Theme / Pretty stuff
"""
Plug 'altercation/vim-colors-solarized'
Plug 'endel/vim-github-colorscheme'
" Awesome looking meta at bottom
" Fugitive will help with git related stuff, and show branch on statusline
Plug 'vim-airline/vim-airline' |
             \ Plug 'vim-airline/vim-airline-themes' |
             \ Plug 'bling/vim-bufferline' 
Plug 'tpope/vim-fugitive'
Plug 'jreybert/vimagit'
Plug 'duggiefresh/vim-easydir'
"Plug 'dracula/vim'
"[2] IDE

Plug 'preservim/nerdtree' |
            \ Plug 'Xuyuanp/nerdtree-git-plugin' |
            \ Plug 'tiagofumo/vim-nerdtree-syntax-highlight'

Plug 'ryanoasis/vim-devicons'
Plug 'airblade/vim-gitgutter'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'preservim/nerdcommenter'
Plug 'jackguo380/vim-lsp-cxx-highlight'
"[3]
"FocusGained and FocusLost autocommand events are not working in terminal vim.
"This plugin restores them when using vim inside Tmux.
Plug 'tmux-plugins/vim-tmux-focus-events'
Plug 'christoomey/vim-tmux-navigator'
Plug 'christoomey/vim-tmux-runner'
Plug 'tmux-plugins/vim-tmux'

"[markdown]
"helps aligning MD tables  
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'
Plug 'habamax/vim-asciidoctor'
"[fuzzy file search]
"another plugin to jump to files slower but no dependencies 
Plug 'ctrlpvim/ctrlp.vim'
"[session management]
Plug 'tpope/vim-obsession'
Plug 'dhruvasagar/vim-prosession'
" Initialize plugin system
call plug#end()


set pastetoggle=<F2>

let g:coc_global_extensions = [
      \ 'coc-json', 
      \ 'coc-git',
      \ 'coc-explorer',
      \ 'coc-clangd',
      \ 'coc-clang-format-style-options']
let g:coc_user_config = {}
let g:coc_user_config['explorer.icon.enableNerdfont']='true'

" Start NERDTree and put the cursor back in the other window.
"autocmd VimEnter * NERDTree | wincmd p
"close vim once there is only nerdtree left
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree")  
                                     \ && b:NERDTree.isTabTree()) | q | endi

" open NERDTree TAB at startup
"let g:nerdtree_tabs_open_on_console_startup=1

map <C-n> :NERDTreeToggle<CR>


set t_Co =256 
syntax enable

set background=dark
"colorscheme dracula

let $SOLARIZED_DIR=expand("~/.vim/plugged/vim-colors-solarized")
if isdirectory($SOLARIZED_DIR)
    colorscheme solarized
    call togglebg#map("<F5>")
endif

let g:airline#extensions#tabline#enabled = 1


" vim-gitgutter used to do this by default:
highlight! link SignColumn LineNr

set colorcolumn=80

nnoremap <Leader>H :call<SID>LongLineHLToggle()<cr>
hi OverLength ctermbg=none cterm=none
match OverLength /\%>80v/
fun! s:LongLineHLToggle()
 if !exists('w:longlinehl')
  let w:longlinehl = matchadd('ErrorMsg', '.\%>80v', 0)
  echo "Long lines highlighted"
 else
  call matchdelete(w:longlinehl)
  unl w:longlinehl
  echo "Long lines unhighlighted"
 endif
endfunction

"asciidoc
" Fold sections, default `0`.
let g:asciidoctor_folding = 1

" Fold options, default `0`.
let g:asciidoctor_fold_options = 1
" Conceal *bold*, _italic_, `code` and urls in lists and paragraphs, default `0`.
" See limitations in end of the README
let g:asciidoctor_syntax_conceal = 1

" Highlight indented text, default `1`.
let g:asciidoctor_syntax_indented = 0

" List of filetypes to highlight, default `[]`
let g:asciidoctor_fenced_languages = ['python', 'c', 'javascript']

if !has('nvim')
 set nocompatible              " be iMproved, required
 filetype off                  " required
 set encoding=UTF-8

 "add mouse support
 set mouse=a

 if has("mouse_sgr")
  set ttymouse=sgr
 else
  set ttymouse=xterm2
 end
 " vim private config
 set smarttab
 set hlsearch

endif

set cindent
set tabstop=2
set shiftwidth=2
" always uses spaces instead of tab characters
set expandtab
set number
set path+=**
set wildmenu

"FILE BROWSING:

filetype plugin on
" Tweaks for browsing
let g:netrw_banner=0        " disable annoying banner
let g:netrw_browse_split=4  " open in prior window
let g:netrw_altv=1          " open splits to the right
let g:netrw_liststyle=3     " tree view
let g:netrw_list_hide=netrw_gitignore#Hide()
let g:netrw_list_hide.=',\(^\|\s\s\)\zs\.\S\+'

"disable arrow keys
noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>

noremap <Leader>y "*y
noremap <Leader>p "*p
noremap <Leader>Y "+y
noremap <Leader>P "+p

